{"version":3,"file":"static/js/315.087c6a97.chunk.js","mappings":"qNAEaA,EAAgBC,EAAAA,GAAAA,IAAH,sH,GAOEA,EAAAA,GAAAA,GAAH,sB,QCNZC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OAAO,SAACH,EAAD,UAAgBG,GACvB,C,6GCHYC,EAAaH,EAAAA,GAAAA,GAAH,yGAOVI,EAAcJ,EAAAA,GAAAA,MAAH,gGAMXK,EAAaL,EAAAA,GAAAA,GAAH,8GAQVM,EAAeN,EAAAA,GAAAA,OAAH,0N,2DCXZO,EAAc,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAiBF,EAAAA,EAAAA,IAAYG,EAAAA,KAEnCC,EAAAA,EAAAA,YAAU,WACTP,GAASQ,EAAAA,EAAAA,MACT,GAAE,CAACR,IAEJ,IAAMS,EAAmBP,EAASQ,QAAO,SAAAC,GAAE,OAC1CA,EAAGC,KAAKC,cAAcC,SAAST,EAAeQ,cADJ,IAI3C,OACC,iCACC,SAACjB,EAAD,CACCmB,KAAK,OACLC,YAAY,6BACZC,SAAU,SAAAC,GAAC,OAAIlB,GAASmB,EAAAA,EAAAA,IAAUD,EAAEE,OAAOC,OAAhC,KAEZ,SAAC1B,EAAD,UACEc,EAAiBa,OAAS,GAC1Bb,EAAiBc,KAAI,SAAAZ,GACpB,OACC,UAACd,EAAD,WACEc,EAAGC,KAAK,KAAC,0BAAOD,EAAGa,UACpB,SAAC1B,EAAD,CACC2B,GAAId,EAAGc,GACPC,QAAS,kBACR1B,GAAS2B,EAAAA,EAAAA,IAAmBhB,EAAGc,IADvB,EAFV,SAKC,aAPed,EAAGc,GAYrB,QAIL,EClDYG,EAAapC,EAAAA,GAAAA,KAAH,4FAUVqC,GAJarC,EAAAA,GAAAA,KAAH,+CAIFA,EAAAA,GAAAA,MAAH,iDAILsC,EAAStC,EAAAA,GAAAA,OAAH,wNCZNuC,EAAO,WACnB,IAAM/B,GAAWC,EAAAA,EAAAA,MAajB,OACC,UAAC2B,EAAD,CAAYI,SAZQ,SAAAd,GACpBA,EAAEe,iBACF,IAAMC,EAAOhB,EAAEE,OACTe,EAAU,CACfvB,KAAMsB,EAAKE,SAASxB,KAAKS,MACzBG,OAAQU,EAAKE,SAASZ,OAAOH,OAE9BrB,GAASqC,EAAAA,EAAAA,IAAgBF,IACzBD,EAAKI,OACL,EAGA,WACC,2BAAO,UACP,SAACT,EAAD,CACCd,KAAK,OACLH,KAAK,OACL2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAET,2BAAO,YACP,SAACZ,EAAD,CACCd,KAAK,MACLH,KAAK,SACL2B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAET,SAACX,EAAD,CAAQf,KAAK,SAAb,SAAsB,kBAGxB,E,UCrCY2B,EAAYlD,EAAAA,GAAAA,IAAH,gDCiBtB,EAdqB,WACpB,OACC,UAACC,EAAAA,QAAD,YACC,wBAAI,cACJ,SAACiD,EAAD,WACC,SAACX,EAAD,OAED,SAACW,EAAD,WACC,SAAC3C,EAAD,QAIH,C","sources":["components/Section/Styled.section.js","components/Section/Section.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding-bottom: 20px;\n`;\n\nexport const SectionTitle = styled.h2``;\n","import { PropTypes } from 'prop-types';\nimport { StyledSection } from './Styled.section';\n\nexport const Section = ({ children }) => {\n\treturn <StyledSection>{children}</StyledSection>;\n};\n\nSection.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5px;\n\twidth: max-content;\n`;\n\nexport const StyledInput = styled.input`\n\tdisplay: inline-block;\n\tmargin-bottom: 20px;\n\tmargin-left: 44px;\n`;\n\nexport const StyledItem = styled.li`\n\tfont-weight: bold;\n\tspan {\n\t\tmargin-left: 5px;\n\t\tfont-weight: normal;\n\t}\n`;\n\nexport const StyledButton = styled.button`\n\tborder: none;\n\tborder-radius: 5px;\n\tbackground-color: red;\n\tcolor: white;\n\tmargin-left: 20px;\n\tdisplay: inline-block;\n\n\t&:hover,\n\t&:active {\n\t\tbackground-color: black;\n\t}\n`;\n","import {\n\tStyledButton,\n\tStyledInput,\n\tStyledItem,\n\tStyledList,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { setFilter } from 'redux/contacts/slice';\nimport { deleteContactThunk, fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(selectContacts);\n\tconst selectedFilter = useSelector(selectFilter);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchContacts());\n\t}, [dispatch]);\n\n\tconst filteredContacts = contacts.filter(el =>\n\t\tel.name.toLowerCase().includes(selectedFilter.toLowerCase())\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<StyledInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Enter name for search here\"\n\t\t\t\tonChange={e => dispatch(setFilter(e.target.value))}\n\t\t\t/>\n\t\t\t<StyledList>\n\t\t\t\t{filteredContacts.length > 0 &&\n\t\t\t\t\tfilteredContacts.map(el => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<StyledItem key={el.id}>\n\t\t\t\t\t\t\t\t{el.name}:<span>{el.number}</span>\n\t\t\t\t\t\t\t\t<StyledButton\n\t\t\t\t\t\t\t\t\tid={el.id}\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tdispatch(deleteContactThunk(el.id))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</StyledButton>\n\t\t\t\t\t\t\t</StyledItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</StyledList>\n\t\t</>\n\t);\n};\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: max-content;\n`;\n\nexport const InputTitle = styled.span`\n\tmargin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n\tmargin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n\twidth: max-content;\n\tpadding: 5px 10px;\n\n\tborder: none;\n\tborder-radius: 5px;\n\tmargin: 0 auto;\n\tbackground-color: lightgrey;\n\t&:active {\n\t\tbackground-color: lightgreen;\n\t}\n`;\n","import { Button, Input, StyledForm } from './Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/operations';\n\nexport const Form = () => {\n\tconst dispatch = useDispatch();\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tconst form = e.target;\n\t\tconst contact = {\n\t\t\tname: form.elements.name.value,\n\t\t\tnumber: form.elements.number.value,\n\t\t};\n\t\tdispatch(addContactThunk(contact));\n\t\tform.reset();\n\t};\n\n\treturn (\n\t\t<StyledForm onSubmit={handleSubmit}>\n\t\t\t<label>name</label>\n\t\t\t<Input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"name\"\n\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<label>number</label>\n\t\t\t<Input\n\t\t\t\ttype=\"tel\"\n\t\t\t\tname=\"number\"\n\t\t\t\tpattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<Button type=\"submit\">Add contact</Button>\n\t\t</StyledForm>\n\t);\n};\n","import styled from 'styled-components';\n\nexport const StyledBox = styled.div`\n\tmargin-bottom: 20px;\n`;\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Form } from 'components/Form/Form';\nimport { Section } from 'components/Section/Section';\nimport { StyledBox } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n\treturn (\n\t\t<Section>\n\t\t\t<h2>Contacts</h2>\n\t\t\t<StyledBox>\n\t\t\t\t<Form />\n\t\t\t</StyledBox>\n\t\t\t<StyledBox>\n\t\t\t\t<ContactList />\n\t\t\t</StyledBox>\n\t\t</Section>\n\t);\n};\n\nexport default ContactsPage;\n"],"names":["StyledSection","styled","Section","children","StyledList","StyledInput","StyledItem","StyledButton","ContactList","dispatch","useDispatch","contacts","useSelector","selectContacts","selectedFilter","selectFilter","useEffect","fetchContacts","filteredContacts","filter","el","name","toLowerCase","includes","type","placeholder","onChange","e","setFilter","target","value","length","map","number","id","onClick","deleteContactThunk","StyledForm","Input","Button","Form","onSubmit","preventDefault","form","contact","elements","addContactThunk","reset","pattern","title","required","StyledBox"],"sourceRoot":""}